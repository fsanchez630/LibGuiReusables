#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{algorithmic}
\usepackage{algorithm}
\floatname{algorithm}{Algoritmo}
\floatname{table}{Tabla}

\usepackage{url}
\usepackage{hyperref}
\usepackage{fancyhdr}
\fancyhf{}
\setlength{\headheight}{15.2pt}
\pagestyle{fancy}
\renewcommand{\chaptermark}[1]{\markboth{#1}{}}
\renewcommand{\sectionmark}[1]{\markright{#1}{}}
\makeatletter
\let\sv@endpart\@endpart
\def\@endpart{\thispagestyle{empty}\sv@endpart}
\makeatother
\end_preamble
\use_default_options true
\master maestro-pfg.lyx
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Índice
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Análisis y diseño del Sistema
\end_layout

\begin_layout Paragraph

\series medium
Aquí va la descripción del capitulo
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Requisitos del proyecto
\end_layout

\begin_layout Paragraph

\series medium
A continuación se enumeran los requisitos del proyecto:
\end_layout

\begin_layout Paragraph

\series medium
1.
 Los tipos de GUIs serán los siguientes: 
\end_layout

\begin_layout Paragraph

\series medium
a) GUIs de una sola página, que denominaremos simples, en las que se integran
 como máximo dos GUIs .
\end_layout

\begin_layout Paragraph

\series medium
b) GUIs con navegación mediante pestañas.
 
\end_layout

\begin_layout Paragraph

\series medium
c) GUIs con navegación mediante vista de árbol.
 
\end_layout

\begin_layout Paragraph

\series medium
2.
 Cualquier tipo de GUI se debe poder anidar cualquier otro, aunque ciertas
 combinaciones no tengan mucho sentido.
 El nivel de anidamiento de GUIs, salvo para la simple, debe ser teóricamente
 ilimitado.
 
\end_layout

\begin_layout Paragraph

\series medium
3.
 El proceso debe ser transparente para: 
\end_layout

\begin_layout Paragraph

\series medium
a) El usuario.
 La edición de una GUI debe ser considerada como una transacción atómica,
 por lo que lo editado en cada una de su páginas debe ser aceptado o rechazado
 con una sola acción, una sola pulsación de botón del usuario al finalizar
 la edición completa.
 
\end_layout

\begin_layout Paragraph

\series medium
b) El diseñador de GUIs.
 Debe poder tratar estas GUIs como las normales de la librería gráfica que
 se use, salvo, quizás, algunos pocos métodos añadidos para la reutilización
 y teniendo en cuenta que si existe un mecanismo previo de extensión de
 GUIs en la librería gráfica debería ser explícitamente anulado para que
 no entre en conflicto el mecanismo de Reusabilidad aquí expuesto.
 
\end_layout

\begin_layout Paragraph

\series medium
c) El programador de aplicaciones.
 Solo debe tener acceso a la interfaz pública de la jerarquía de GUIs reusables,
 que, además de la propia de las GUIs normales de la librería gráfica, debe
 constar de métodos para añadir GUIs, listas de GUIs relacionadas y para
 la inicialización propia de los GUIs reusables, aparte de la que puedan
 tener como GUIs normales.
 Además debe contar un procedimiento sencillo para el ensamblado de basado
 en métodos polimórficos, de manera que cada clase a editar pueda ensamblar
 convenientemente su propio GUI reusable, ya sea por invocación del los
 mismos métodos en las clases de niveles más básicos de su jerarquía y/o
 por invocación de métodos con igual propósito en los objetos asociados.
 
\end_layout

\begin_layout Paragraph

\series medium
4.
 Se debe mantener en lo posible la estética de las GUIs diseñadas.
 
\end_layout

\begin_layout Paragraph

\series medium
5.
 Debe existir un mecanismo para crear GUIs de los tres tipos requeridos
 en el punto 1, con la estructura mínima: botones para aceptar la edición
 y rechazarla, contenedor apropiado con distribución y vista de árbol para
 el último de los tipos requeridos.
 Estas GUIs las usa el programador de aplicaciones para envolver GUIs sin
 botones.
\end_layout

\begin_layout Paragraph

\series medium
6.
 Comunicación entre GUIs integradas, hay que arbitrar un sistema de paso
 de mensajes entre GUIs.
 
\end_layout

\begin_layout Paragraph

\series medium
7.
 Deseamos proteger lo más posible el funcionamiento interno de las clases
 de la biblioteca, nueva referencia a una interfaz pública reducida, y poder
 forzar al diseñador de GUIs la implementación de ciertos métodos, imprescindibl
es para el funcionamiento del proceso a implementar, de manera que su ausencia
 sea detectada en tiempo de compilación.
 
\end_layout

\begin_layout Paragraph

\series medium
8.
 Se usará polimorfismo en lugar de reflexión, introspección sobre clases,
 siempre que sea posible.
\end_layout

\begin_layout Paragraph

\series medium
9.
 Se debe poder diseñar las GUIs reusables en un editor gráfico de GUIs,
 tal y como se diseñan los GUIs usuales.
 
\end_layout

\begin_layout Paragraph

\series medium
10.
 La implementación del proyecto se estructurará un forma de biblioteca de
 clases, usando el lenguaje de programación Java y la librería gráfica Swing.
 La biblioteca se empaquetará en un archivo de tipo jar.
 
\end_layout

\begin_layout Paragraph

\series medium
11.
 Se debe elaborar un programa de prueba, según el siguiente esquema mínimo:
\end_layout

\begin_layout Paragraph

\series medium
a) Los campos (variable) en una clase no tendrán acceso público, sino a
 través de métodos accesores, este es un requisito general para todo el
 proyecto.
 
\end_layout

\begin_layout Paragraph

\series medium
b) Crear una clase, p.
 ej.
 A, con al menos cinco campos.
 Derivar de A dos clases, A1 y A2.
 A1 añade uno o dos campos más a la clase base.
 A2 añade al menos cinco.
 
\end_layout

\begin_layout Paragraph

\series medium
c) Diseñar GUIs reusables para editar todos los campos de las clases A,
 A1 y A2.
 Diseñarlas sin botones, para que posteriormente sean envueltas en GUIs
 reusables con estructura mínima, y darles una distribución adecuada.
 Usar cierta variedad de componentes gráficos en las GUIs.
 
\end_layout

\begin_layout Paragraph

\series medium
d) Crear tres clases B, C, D con al menos cinco campos cada una y de manera
 un objeto de clase A1, otro de clase A2 y otro de clase C estén agregados
 en uno de clase B, y uno de clase D esté agregado en uno de clase C.
\end_layout

\begin_layout Paragraph

\series medium
e) Diseñar GUIs reusables para editar los campos de las clases B, C y D.
 El de B debe contener vista de árbol y botones, los otros no, darles una
 distribución adecuada.
 Usar cierta variedad de componentes gráficos en las GUIs.
 Mediante la comunicación de GUIs requerida en el punto 6, el cambio en
 un determinado componente gráfico de la GUI de D debe provocar un cambio
 en uno de B, p.
 ej.
 al deslizar un JSlider en la GUI de D que cambie un número en un JSpinner
 en la de B.
 9
\end_layout

\begin_layout Paragraph

\series medium
f) Crear un aplicación con interfaz gráfica en la que se vayan mostrando,
 y se puedan editar, las GUIs completas de A1, en una sola página (simple),
 de A2, con pestañas, y de B, con vista de árbol en la que se pueda acceder
 a todos las GUIs de sus objetos agregados y los agregados a sus agregados.
 Las GUIs deben ser ensambladas siguiendo el procedimiento a desarrollar
 comentado en el requisito 3(c).
 La edición debe ser real, o sea, con actualización de campos en los objetos
 al aceptar la edición el usuario, previa validación de la coherencia de
 los datos.
 
\end_layout

\begin_layout Paragraph

\series medium
g) Las GUIs ensamblados deben tener un buen comportamiento frente a redimensiona
mientos realizados por el usuario.
 
\end_layout

\begin_layout Paragraph

\series medium
12.
 El proyecto debe estar debidamente documentado usando un sistema estándar
 de documentación, como pueden ser Javadoc o Doxygen.
 13.
 El software producido debe ser de código abierto, bajo la licencia GPL
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Estimación de Costes y Tiempos
\end_layout

\begin_layout Standard
A continuación se detalla una posible estimación de los tiempos de la elaboració
n del proyecto.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Concepto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Porcentaje
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total Horas
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
memoria
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
25%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
135
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
proyecto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
75%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
405
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
540
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Estimación del esfuerzo por Tareas
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tarea
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Porcentaje
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total Horas
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Análisis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
60,75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diseño
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
60,75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Codificación
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
141,75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pruebas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
141,75
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
405
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Casos de Uso
\end_layout

\begin_layout Paragraph

\series medium
Existen dos roles principales que intervienen en el desarrollo de una aplicación
: el desarrollador de aplicaciones y el diseñador de GUIs.
 
\end_layout

\begin_layout Paragraph

\series medium
El desarrollador de aplicaciones interactuá con la librería pidiendo diálogos
 vacíos , inicializará los diálogos que le proporcione la librería, y añadirá
 un diálogo hijo a un diálogo padre.
 Además, pedirá diálogos creados por el diseñador de aplicaciones.
 Todas estas tareas las realizará en la vista de codificación del IDE.
\end_layout

\begin_layout Paragraph

\series medium
El diseñador de GUIs interactuá con la vista diseño, la librería permite
 que sus distintos tipos de diálogos puedan ser usados en la vista de diseño
 del IDE.
 De esta forma, el diseñador de GUIs arrastrará uno de esos diálogos a la
 hoja al tapiz de diseño del IDE y podrá trabajar sobre él añadiendo componentes
 y dándole el aspecto que desee.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/UseCase Diagram2.jpg
	lyxscale 50
	width 90page%
	height 80pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.1"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Esquema casos de Uso
\end_layout

\end_inset

Esquema casos de Uso
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/UseCase Diagram0.jpg
	lyxscale 50
	width 60page%
	height 45pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.2"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Librería Formulario Extensibles
\end_layout

\end_inset

Librería Formulario Extensibles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caso de Uso: LIBRERÍA FORMULARIOS EXTENSIBLES
\end_layout

\begin_layout Paragraph

\series medium
Desde el punto de vista del desarrollador de aplicaciones, éste pedirá diálogos
 vacíos a la librería inicializará los diálogos que le proporcione la librería,
 y añadirá un diálogo hijo a un diálogo padre.
 Además, pedirá diálogos creados por el diseñador de aplicaciones.
 Todas estas tareas las realizará en la vista de codificación del IDE.
\end_layout

\begin_layout Paragraph

\bar under
Evolución típica de los acontecimientos
\end_layout

\begin_layout Paragraph

\series medium
1) Pide a la Librería un Formulario Vacío (Simple, Por Fichas, Árbol) =>
 2) Se devuelve una instancia del tipo de formulario
\end_layout

\begin_layout Paragraph

\series medium
3) Pide añadir un hijo o una lista de hijos => 4) Se integran los Formularios
 hijos en el padre
\end_layout

\begin_layout Paragraph

\series medium
5) Pide configurar el formulario => 6) Se ajustan los Formularios para visualiza
r
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/UseCase Diagram1.jpg
	lyxscale 50
	width 60pheight%
	height 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.3"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diseño Gui
\end_layout

\end_inset

Diseño Gui
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caso de Uso: DISEÑO DE LA GUI DE LA APLICACIÓN
\end_layout

\begin_layout Paragraph

\series medium
Desde el punto de vista del diseñador de GUIs, la librería debe permitir
 que sus distintos tipos de diálogos puedan ser usados en la vista de diseño
 del IDE.
 De esta forma, el diseñador de GUIs arrastrará uno de esos diálogos a la
 hoja al tapiz de diseño del IDE y podrá trabajar sobre él añadiendo componentes
 y dándole el aspecto que desee.
 
\end_layout

\begin_layout Paragraph

\bar under
Evolución típica de los acontecimientos
\end_layout

\begin_layout Paragraph

\series medium
1)En la vista diseño del IDE arrastra desde la paleta un icono de Formulario
 (Simple, Por Fichas, Árbol) => 2)La librería permite utilizar los Formularios
 Extensibles en vista diseño
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/UseCase usuario.jpg
	lyxscale 50
	width 60pheight%
	height 60page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.4"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Acciones del Usuario
\end_layout

\end_inset

Acciones del Usuario
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/imagenes/Botones.png
	lyxscale 50
	width 80page%
	height 20pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.5"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Esquema Botones
\end_layout

\end_inset

Esquema Botones
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Caso de Uso: ACCIONES DEL USUARIO
\end_layout

\begin_layout Paragraph

\series medium
Desde el punto de vista del Usuario, la librería inicia las acciones recursivas
 de validación , guardado o limpieza de los datos de los Formularios cuando
 se ha pulsado el Botón Aceptar o Botón Cancelar.
\end_layout

\begin_layout Paragraph

\bar under
Evolución típica de los acontecimientos Botón Aceptar con Validación correcta
\end_layout

\begin_layout Paragraph

\series medium
1)El usuario introduce cambios => 2)El usuario pulsa Botón Aceptar para
 confirmar los cambios realizados
\end_layout

\begin_layout Paragraph

\series medium
3)Se realizan las tareas recursivas de Validación => 4)Se realizan las tareas
 recursivas de Guardado
\end_layout

\begin_layout Paragraph

\series medium
5)Se realizan las tareas recursivas de Limpieza => 6)Se presenta mensaje
 de Operación Realizada.
\end_layout

\begin_layout Paragraph

\bar under
Evolución típica de los acontecimientos Botón Aceptar con Validación incorrecta
\end_layout

\begin_layout Paragraph

\series medium
1)El usuario introduce cambios => 2)El usuario pulsa Botón Aceptar para
 confirmar los cambios realizados
\end_layout

\begin_layout Paragraph

\series medium
3)Se realizan las tareas recursivas de Validación => 4)Se presenta mensaje
 de Datos Incorrectos
\end_layout

\begin_layout Paragraph

\bar under
Evolución típica de los acontecimientos Botón Cancelar
\end_layout

\begin_layout Paragraph

\series medium
1)El usuario introduce cambios => 2)El usuario pulsa Botón Cancelar para
 rechazar los cambios realizados
\end_layout

\begin_layout Paragraph

\series medium
3)Se realizan las tareas recursivas de Limpieza => 4)Se presenta mensaje
 de Operación Cancelada.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Diagramas UML del Sistema
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/Diagrama clases General.jpg
	lyxscale 50
	width 85page%
	height 75pheight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.6"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diagrama Clases
\end_layout

\end_inset

Diagrama Clases
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Diagramas de Clases
\end_layout

\begin_layout Paragraph

\series medium
La jerarquía de clases permite 3 tipos de Formulario: Simple, por Fichas
 y Árbol.
\end_layout

\begin_layout Paragraph

\bar under
Lista de las clases que se visualizan:
\end_layout

\begin_layout Itemize
\noindent
\align left
FormularioExtensible: Clase abstracta que es padre de los tipos de formulario
 de la jerarquía.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
FormularioSimple: Formulario básico de la jerarquía.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
FormularioPorFichas: Formulario con navegación por pestañas.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
FormularioArbol: Formulario con navegación con un esquema de árbol.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
FactoriaFormulariosExtensible: Permite la creación de formularios por tipo.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
PanelBotonesEventos: Clase que define un Panel que contiene los Botones
 Aceptar y Cancelar.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
GestorEventos: Clase que notifica Eventos a un Objeto Observador.
\end_layout

\begin_layout Itemize
Evento: Clase abstracta que es padre de los tipos de Evento de la jerarquía
\end_layout

\begin_layout Itemize
EventoCambioValor: Clase para representar un evento de cambio de valor en
 un Objeto.
\end_layout

\begin_layout Itemize
EventoPulsarBoton: Clase para representar un evento de botón pulsado.
\end_layout

\begin_layout Itemize
EventoSelNodo: Clase para representar un evento de selección de Nodo en
 un Árbol.
\end_layout

\begin_layout Itemize
EventoValidar: Clase para representar un evento de Validación.
\end_layout

\begin_layout Paragraph

\bar under
Lista de las interfaces que se visualizan:
\end_layout

\begin_layout Itemize
\noindent
\align left
Validable: Interface que define los métodos para implementar la validación
 de formularios.
 
\end_layout

\begin_layout Itemize
\noindent
\align left
Comunicable: Interface que define los métodos para implementar la comunicación
 entre componentes de formularios.
\end_layout

\begin_layout Itemize
Observador: Interface que define los métodos que debe implementar un Objeto
 que observa eventos.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Diagramas de los métodos Recursivos para Validación, Guardado y Limpieza.
\end_layout

\begin_layout Subsubsection
Botón Aceptar
\end_layout

\begin_layout Paragraph

\series medium
En este diagrama de secuencia se muestra el funcionamiento del Botón Aceptar.
 Se lanza un evento pulsar botón, que se notifica a través del gestor de
 Eventos.
 Esto provoca que se ejecute el método aceptar.
 Seguidamente se realiza la validación recursiva de los Formularios que
 puede lanzar un evento validar Correcto o Incorrecto.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/Diagrama secuencia Aceptar.jpg
	lyxscale 50
	width 90page%
	height 60pheight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.7"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diagrama Botón Aceptar
\end_layout

\end_inset

Diagrama Botón Aceptar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Evento Validar Correcto
\end_layout

\begin_layout Paragraph

\series medium
En este diagrama de secuencia se muestra el funcionamiento del Evento Validar
 Correcto que se notifica a través del gestor de Eventos.
 Esto provoca que se realice las operaciones recursivas de guardado y seguidamen
te la limpieza de los Formularios.
 Se muestra un dialogo con un mensaje de Operación Realizada.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/diagrama secuencia evento Validar Correcto.jpg
	lyxscale 50
	width 80page%
	height 66pheight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.8"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series medium
Evento Validar Correcto
\end_layout

\end_inset


\series medium
Evento Validar Correcto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Evento Validar Incorrecto
\end_layout

\begin_layout Paragraph

\series medium
En este diagrama de secuencia se muestra el funcionamiento del Evento Validar
 Incorrecto que se notifica a través del gestor de Eventos.
 Esto provoca que se muestre un dialogo con un mensaje de Validación Incorrecta.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/diagrama secuencia evento Validar Incorrecto.jpg
	lyxscale 50
	width 80page%
	height 70pheight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.9"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout

\series medium
Evento Validar Incorrecto
\end_layout

\end_inset


\series medium
Evento Validar Incorrecto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Botón Cancelar
\end_layout

\begin_layout Paragraph

\series medium
En este diagrama de secuencia se muestra el funcionamiento del Botón Cancelar.
 Se lanza un evento pulsar botón, que se notifica a través del gestor de
 Eventos.
 Esto provoca que se ejecute el método cancelar.
 Seguidamente se realiza la operación recursiva de limpieza de los Formularios.
 Se muestra un dialogo con un mensaje de Operación Cancelada.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename recursos/uml/diagrama secuencia Cancelar.jpg
	lyxscale 50
	width 80page%
	height 68pheight%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Figura 3.10"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Diagrama
\series medium
 Botón Cancelar
\end_layout

\end_inset

Diagrama
\series medium
 Botón Cancelar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
